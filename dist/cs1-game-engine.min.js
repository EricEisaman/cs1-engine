!function(){"use strict";const e={loadScript:function(e){return new Promise((function(t,n){var a=document.getElementsByTagName("head")[0],o=document.createElement("script");o.type="text/javascript",o.addEventListener("load",(function(){this.removeEventListener("load",this),t(o)})),o.src=e,a.appendChild(o)}))}};AFRAME.registerComponent("player",{schema:{avatar:{default:"Mel"},me:{default:!1}},init:function(){this.data.me&&(console.log("Adding my-player"),this.el.setAttribute("id","my-player"),this.el.setAttribute("wasd-controls","acceleration:250"),this.addCamTarget()),this.addAvatar(),this.cam=document.querySelector("[camera]")},addAvatar:function(){const e=document.createElement("a-box");e.setAttribute("color","red"),e.setAttribute("id","my-avatar"),e.object3D.position.y=.5,this.el.appendChild(e),this.el.avatar=e},addCamTarget:function(){const e=document.createElement("a-entity");e.object3D.position.set(0,3,4),e.setAttribute("id","cam-target"),e.togglePos=this.togglePos,this.el.appendChild(e),this.el.camTarget=e},togglePos:function(){3==CS1.myPlayer.camTarget.object3D.position.y?(CS1.myPlayer.camTarget.object3D.position.set(0,.5,1),CS1.myPlayer.avatar.setAttribute("material","transparent: true; opacity: 0.2")):(CS1.myPlayer.camTarget.object3D.position.set(0,3,4),CS1.myPlayer.avatar.setAttribute("material","transparent: false; opacity: 1.0"))},tick:function(e,t){this.el.object3D.rotation.y=this.cam.object3D.rotation.y}}),AFRAME.registerPrimitive("a-player",{defaultComponents:{player:{me:!0}},mappings:{avatar:"player.avatar",me:"player.me"}}),(()=>{const e=new THREE.Vector3,t=new THREE.Vector3;AFRAME.registerComponent("follow",{schema:{strength:{default:.03},target:{type:"selector"}},tick:function(){const n=e;this.el.object3D.getWorldPosition(n);const a=t;this.data.target.object3D.getWorldPosition(a),a.sub(n).multiplyScalar(this.data.strength).add(this.el.object3D.position),this.el.setAttribute("position",a)}})})(),AFRAME.registerComponent("cs1cam",{schema:{},init:function(){}}),AFRAME.registerPrimitive("cs1-cam",{defaultComponents:{scene:{}},mappings:{}}),AFRAME.registerComponent("cs1scene",{schema:{},init:function(){CS1.scene=document.createElement("a-scene"),CS1.myPlayer=document.createElement("a-player"),window.addEventListener("DOMContentLoaded",e=>{if(AFRAME.scenes[0]){CS1.scene=AFRAME.scenes[0];const e=document.querySelector("[camera]");e.parentNode.removeChild(e)}CS1.scene.clock.autoStart=!1,CS1.scene.appendChild(CS1.myPlayer),CS1.cam=document.createElement("a-entity"),CS1.cam.setAttribute("camera","active:true"),CS1.cam.object3D.position.y=3,CS1.cam.setAttribute("follow","target: #cam-target;"),CS1.cam.setAttribute("look-controls","pointerLockEnabled:true;"),CS1.scene.appendChild(CS1.cam),AFRAME.scenes[0]||document.body.appendChild(CS1.scene)})}}),AFRAME.registerPrimitive("cs1-scene",{defaultComponents:{cs1scene:{}},mappings:{}}),CS1.scene=document.createElement("cs1-scene"),document.body.appendChild(CS1.scene),AFRAME.registerComponent("game",{init:function(){CS1.utils=e},setType:function(e){this.gameType=e},start:function(){switch(this.gameType){case"MULTIPLAYER":"undefined"!=typeof io||CS1.utils.loadScript("cs1-game-socket.min.js").then(e=>{console.log("Time to display login screen.")}),console.log("Multiplayer game waiting for login.");break;case"SINGLE_PLAYER_SERVER":console.log("Single player game waiting for login.");break;default:console.log("Single player game started.  Starting CS1.scene.clock."),CS1.scene.clock.start()}},tick:function(e,t){},addParticles:function(t=""){e.loadScript("https://unpkg.com/aframe-spe-particles-component@1.0.4/dist/aframe-spe-particles-component.min.js").then(e=>{try{CS1.myPlayer.setAttribute("spe-particles",t)}catch(e){console.warn("ADDING PARTICLES FAILED!"),console.error(e)}})},addEnvironment:function(t="ground:flat"){e.loadScript("https://unpkg.com/aframe-environment-component@1.1.0/dist/aframe-environment-component.min.js").then(e=>{CS1.scene.setAttribute("environment",t)})}}),CS1.scene.setAttribute("game",""),CS1.game=CS1.scene.components.game,window.CS1={}}();
